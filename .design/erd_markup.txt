Table COUNTRY as C{
  id int [pk, increment]
  code varchar
  name varchar
}

Table STATE as S{
  id int [pk, increment]
  country int
  code varchar
}

Ref: S.country > C.id

Table MARITAL_STATUS as MS{
  id int [pk, increment]
  name varchar
}
// filled by fixtures

Table SEX{
  id int [pk, increment]
  name varchar // fill this using fixtures
}

Table USER as U{
  id uuid [pk]
  username varchar
  first_name varchar
  second_name varchar
  surname varchar
  created_at timestamp
}

Table ETHNICITY as E{
  id int [pk, increment]
  name varchar
}
// applied from fixtures
// Also include None of the above

Table PERSONAL_INFO as PI {
  id int [pk, increment]
  user uuid
  sex int
  birth_date datetime
  ssn varchar // social security number (9 digits), unique, nullable
  marital_status int
  ethnicity int 
}

Ref: PI.marital_status > MS.id

Ref: PI.user - U.id
Ref: PI.sex > SEX.id
Ref: PI.ethnicity > E.id

Table CONTACT as CO{
  id int [pk, increment]
  user uuid
  email_address varchar
  phone_number varchar
  state int
  address_line_1 varchar // building #, street name
  address_line_2 varchar // floor, room, suite or apartment #
  address_line_3 varchar // City/town
}

Ref: CO.user - U.id
Ref: CO.state > S.id

Table PRACTICE as PRA{
  id int [pk, increment]
  name varchar
  state int
  owned_by uuid
}

Ref: PRA.owned_by > U.id
Ref: PRA.state > S.id

Table PROVIDER as PR{
  user uuid
  NPI int [pk] // 10 digits
  practice int
}
// NPI and practice are unique together

Ref: PR.user - U.id // one-to-one relaionship
Ref: PR.practice > PRA.id // one-to-many relationship
 
Table PATIENT as PA{
  id int [pk]
  user uuid
  practice int
}
// user and practice are unique together

Ref: PA.practice > PRA.id

Ref: PA.user - U.id

Table RELATIONSHIP as R{
  id int [pk, increment]
  name varchar // Parent, Sibling, Friend, Other
}

Table EMERGENCY_CONTACT as EC {
  id int [pk, increment]
  patient int
  name varchar // full name
  relationship int
  phone_number varchar
}

Ref: EC.patient > PA.id
Ref: EC.relationship > R.id

Table INSURANCE_TYPE as IT {
  id int [pk, increment]
  name varchar
}
// Will be added from fixtures

Table INSURANCE as I{
  id int [pk, increment]
  patient int
  name varchar
  type int
  address varchar
  policy_holder varchar // name of patient, spouse or numbers
}

Ref: I.patient > PA.id
Ref: I.type > IT.id

Table CASE{
  id int [pk, increment]
  patient id
  chief_complaint varchar
  created_at timestamp
}

Ref: CASE.patient > PA.id

Table VITAL_POSITIONS as VP{
  id int [pk, increment]
  name varchar // lying, sitting, standing
  created_by int
  is_private boolean
}

Ref: VP.created_by > PR.NPI

// Added from fixtures but providers
// can define their own positions

Table VITAL_TYPE as VLT{
  id int [pk, increment]
  name varchar
}
// Will be filled by fixtures

Table VITAL as VT{
  id int [pk]
  encounter int
  vital_type int
  position int
  reading varchar
}
// encounter, vital_type and vital_position
// are unique together

Ref: VT.encounter > EN.id
Ref: VT.vital_type > VLT.id
Ref: VT.position > VP.id

Table LAB_TYPE as LT{
  id int [pk, increment]
  name varchar
  created_at timestamp
  created_by int
  is_private boolean // False only for default values
}
// fixtures will assign default lab types
// providers can define their own lab types

Ref: LT.created_by > PR.NPI

Table TEST as L{
  id int [pk, increment]
  encounter int
  lab_type int  //blood-test, X-RAY etc
  remarks varchar
  conducted_by varchar
  created_at timestamp
}

Ref: L.encounter > EN.id
Ref: L.lab_type > LT.id

Table ATTACHMENT as A{
  id int [pk]
  lab int
  file varchar // link to a file on a CDN
  created_at timestamp
}

Ref: A.lab > L.id

Table MEDICATION_TYPE as MT{
  id int [pk, increment]
  name varchar
  created_at timestamp
  is_private boolean  // False only for default values
}

Table MEDICATION_STATUS as MES {
  id int [pk, increment]
  name varchar // ongoing, completed
}
// fixtures to assign defaults

Table ALLERGY as AG {
  id int [pk, increment]
  patient int
  name varchar // allergy KB
  added_by int // nullable
}

Ref: AG.patient > PA.id
Ref: AG.added_by > PR.NPI

Table MEDICATION as M{
  id int [pk, increment]
  patient int
  name varhcar // medication KB
  remarks varchar
  medication_type int
  dosage varchar
  status int
  prescribed_by int // nullable
  prescription_date datetime //nullable
  end_date datetime // nullable
  created_at timestamp
}

Ref: M.medication_type > MT.id
Ref: M.patient > PA.id
Ref: M.status > MES.id
Ref: M.prescribed_by > PR.NPI

Table ENCOUNTER_REASONS as ER{
  id int [pk, increment]
  name varchar // follow up, vitals check
  created_by int
  is_private boolean // False only for defaults
}

Ref: ER.created_by > PR.NPI

Table ENCOUNTER as EN{
  id int [pk, increment]
  case int
  provider uuid
  encounter_reason varchar
  chief_complaint_update varchar
  hpi varchar // nullable
  ros varchar // Review of systems
  objective varchar
  // cc, hpi, objective and ROS can be applied from previous encounters
  assesment varchar
  diagnosis varchar
  icd_codes varchar // space-separated ICD codes
  plan varchar
  check_in timestamp
  check_out timestamp
  created_at timestamp
  closed boolean
}

Ref: EN.encounter_reason > ER.id
Ref: EN.case > CASE.id
Ref: EN.provider > PR.NPI
